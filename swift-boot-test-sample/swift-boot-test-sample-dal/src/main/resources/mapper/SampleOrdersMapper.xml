<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.github.jaylondev.swift.boot.test.sample.api.dal.mapper.SampleOrdersMapper">

  <resultMap id="BaseResultMap" type="io.github.jaylondev.swift.boot.test.sample.api.dal.entity.SampleOrders">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="order_no" jdbcType="VARCHAR" property="orderNo"/>
    <result column="sku_name" jdbcType="VARCHAR" property="skuName"/>
    <result column="sku_count" jdbcType="INTEGER" property="skuCount"/>
    <result column="order_status" jdbcType="TINYINT" property="orderStatus"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, order_no, sku_name, sku_count, order_status, create_time, update_time
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sample_orders
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sample_orders
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="io.github.jaylondev.swift.boot.test.sample.api.dal.entity.SampleOrders">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sample_orders(order_no, sku_name, sku_count, 
	 order_status, create_time, update_time)
    values (#{orderNo,jdbcType=VARCHAR}, #{skuName,jdbcType=VARCHAR}, #{skuCount,jdbcType=INTEGER}, 
	 #{orderStatus,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>

  <insert id="insertSelective" parameterType="io.github.jaylondev.swift.boot.test.sample.api.dal.entity.SampleOrders">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sample_orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="skuName != null">
        sku_name,
      </if>
      <if test="skuCount != null">
        sku_count,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="skuName != null">
        #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="skuCount != null">
        #{skuCount,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="io.github.jaylondev.swift.boot.test.sample.api.dal.entity.SampleOrders">
    update sample_orders
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="skuName != null">
        sku_name = #{skuName,jdbcType=VARCHAR},
      </if>
      <if test="skuCount != null">
        sku_count = #{skuCount,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKey" parameterType="io.github.jaylondev.swift.boot.test.sample.api.dal.entity.SampleOrders">
    update sample_orders
    set order_no = #{orderNo,jdbcType=VARCHAR},
	  sku_name = #{skuName,jdbcType=VARCHAR},
	  sku_count = #{skuCount,jdbcType=INTEGER},
	  order_status = #{orderStatus,jdbcType=TINYINT},
	  create_time = #{createTime,jdbcType=TIMESTAMP},
	  update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
